[{"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\index.js":"1","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\redux\\store\\index.js":"2","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\assets\\icons\\index.js":"3","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\redux\\reducers\\index.js":"4","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\redux\\reducers\\manageUsersReducer.js":"5","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\redux\\reducers\\manageRestaurantReducer.js":"6","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\redux\\reducers\\generalReducer.js":"7","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\assets\\icons\\sygnet.js":"8","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\assets\\icons\\logo-negative.js":"9","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\assets\\icons\\logo.js":"10","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\App.js":"11","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\polyfill.js":"12","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\serviceWorker.js":"13","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\PrivateRoute.js":"14","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\PublicRoute.js":"15","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\containers\\TheContent.js":"16","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\pages\\login\\Login.js":"17","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\pages\\ResetPasswordPage\\ResetPasswordPage.js":"18","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\pages\\register\\Register.js":"19","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\pages\\page404\\Page404.js":"20","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\pages\\page500\\Page500.js":"21","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\containers\\TheLayout.js":"22","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\routes.js":"23","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\redux\\actions\\generalActions.js":"24","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\containers\\TheFooter.js":"25","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\pages\\ManageUsersPage\\ManageUsersPage.js":"26","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\users\\User.js":"27","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\users\\Users.js":"28","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\widgets\\Widgets.js":"29","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\theme\\typography\\Typography.js":"30","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\containers\\TheSidebar.js":"31","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\containers\\TheHeader.js":"32","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\theme\\colors\\Colors.js":"33","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\dashboard\\Dashboard.js":"34","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\charts\\Charts.js":"35","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\notifications\\alerts\\Alerts.js":"36","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\notifications\\modals\\Modals.js":"37","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\notifications\\badges\\Badges.js":"38","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\notifications\\toaster\\Toaster.js":"39","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\icons\\coreui-icons\\CoreUIIcons.js":"40","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\icons\\flags\\Flags.js":"41","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\pages\\ManageRestaurantPage\\ManageRestaurantPage.jsx":"42","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\icons\\brands\\Brands.js":"43","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\buttons\\button-dropdowns\\ButtonDropdowns.js":"44","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\buttons\\button-groups\\ButtonGroups.js":"45","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\buttons\\buttons\\Buttons.js":"46","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\buttons\\brand-buttons\\BrandButtons.js":"47","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\tabs\\Tabs.js":"48","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\switches\\Switches.js":"49","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\tooltips\\Tooltips.js":"50","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\progress-bar\\ProgressBar.js":"51","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\popovers\\Popovers.js":"52","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\navs\\Navs.js":"53","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\paginations\\Pagnations.js":"54","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\navbars\\Navbars.js":"55","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\forms\\BasicForms.js":"56","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\list-groups\\ListGroups.js":"57","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\carousels\\Carousels.js":"58","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\cards\\Cards.js":"59","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\collapses\\Collapses.js":"60","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\breadcrumbs\\Breadcrumbs.js":"61","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\jumbotrons\\Jumbotrons.js":"62","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\tables\\Tables.js":"63","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\redux\\actions\\axios.js":"64","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\widgets\\WidgetsBrand.js":"65","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\widgets\\WidgetsDropdown.js":"66","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\users\\UsersData.js":"67","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\charts\\ChartLineSimple.js":"68","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\charts\\ChartBarSimple.js":"69","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\pages\\ManageUsersPage\\UpdateUserPasswordModalComp.js":"70","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\containers\\_nav.js":"71","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\containers\\TheHeaderDropdownTasks.js":"72","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\pages\\ManageRestaurantPage\\UpdatePasswordModalComp.js":"73","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\pages\\ManageRestaurantPage\\AddRestaurantModalComp.js":"74","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\pages\\ManageRestaurantPage\\DeleteRestaurantModalComp.js":"75","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\redux\\actions\\manageRestaurantAction.js":"76","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\reusable\\index.js":"77","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\redux\\actions\\manageUsersAction.js":"78","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\charts\\MainChartExample.js":"79","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\containers\\TheHeaderDropdownNotif.js":"80","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\containers\\TheHeaderDropdownMssg.js":"81","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\containers\\TheHeaderDropdown.js":"82","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\reusable\\DocsLink.js":"83"},{"size":835,"mtime":1609995644913,"results":"84","hashOfConfig":"85"},{"size":407,"mtime":1609924755762,"results":"86","hashOfConfig":"85"},{"size":3813,"mtime":1607917532000,"results":"87","hashOfConfig":"85"},{"size":352,"mtime":1610168074985,"results":"88","hashOfConfig":"85"},{"size":1362,"mtime":1610344479658,"results":"89","hashOfConfig":"85"},{"size":1918,"mtime":1610116684986,"results":"90","hashOfConfig":"85"},{"size":2120,"mtime":1609926422341,"results":"91","hashOfConfig":"85"},{"size":978,"mtime":1607917532000,"results":"92","hashOfConfig":"85"},{"size":6933,"mtime":1607917532000,"results":"93","hashOfConfig":"85"},{"size":6920,"mtime":1607917532000,"results":"94","hashOfConfig":"85"},{"size":1597,"mtime":1610164046293,"results":"95","hashOfConfig":"85"},{"size":1895,"mtime":1607917532000,"results":"96","hashOfConfig":"85"},{"size":4686,"mtime":1607917532000,"results":"97","hashOfConfig":"85"},{"size":648,"mtime":1609995827290,"results":"98","hashOfConfig":"85"},{"size":1426,"mtime":1609937309364,"results":"99","hashOfConfig":"85"},{"size":2199,"mtime":1610181480254,"results":"100","hashOfConfig":"85"},{"size":6889,"mtime":1610165815207,"results":"101","hashOfConfig":"85"},{"size":6422,"mtime":1610165852004,"results":"102","hashOfConfig":"85"},{"size":2864,"mtime":1607917532000,"results":"103","hashOfConfig":"85"},{"size":821,"mtime":1609998692418,"results":"104","hashOfConfig":"85"},{"size":1313,"mtime":1607917532000,"results":"105","hashOfConfig":"85"},{"size":639,"mtime":1609997362936,"results":"106","hashOfConfig":"85"},{"size":5950,"mtime":1610166476540,"results":"107","hashOfConfig":"85"},{"size":3169,"mtime":1610181535221,"results":"108","hashOfConfig":"85"},{"size":569,"mtime":1607917532000,"results":"109","hashOfConfig":"85"},{"size":9179,"mtime":1610422717255,"results":"110","hashOfConfig":"85"},{"size":1200,"mtime":1607917532000,"results":"111","hashOfConfig":"85"},{"size":2132,"mtime":1607917532000,"results":"112","hashOfConfig":"85"},{"size":12301,"mtime":1607917532000,"results":"113","hashOfConfig":"85"},{"size":7005,"mtime":1609992281951,"results":"114","hashOfConfig":"85"},{"size":1792,"mtime":1610182310971,"results":"115","hashOfConfig":"85"},{"size":3069,"mtime":1610422981404,"results":"116","hashOfConfig":"85"},{"size":3690,"mtime":1609992281953,"results":"117","hashOfConfig":"85"},{"size":23856,"mtime":1607917532000,"results":"118","hashOfConfig":"85"},{"size":5781,"mtime":1609992862130,"results":"119","hashOfConfig":"85"},{"size":5915,"mtime":1609992281953,"results":"120","hashOfConfig":"85"},{"size":11002,"mtime":1610092349098,"results":"121","hashOfConfig":"85"},{"size":3610,"mtime":1609992281953,"results":"122","hashOfConfig":"85"},{"size":5333,"mtime":1609992281953,"results":"123","hashOfConfig":"85"},{"size":611,"mtime":1609992281954,"results":"124","hashOfConfig":"85"},{"size":595,"mtime":1609992281953,"results":"125","hashOfConfig":"85"},{"size":5722,"mtime":1610166971653,"results":"126","hashOfConfig":"85"},{"size":968,"mtime":1609992281953,"results":"127","hashOfConfig":"85"},{"size":16494,"mtime":1609992281953,"results":"128","hashOfConfig":"85"},{"size":6174,"mtime":1609992281953,"results":"129","hashOfConfig":"85"},{"size":33221,"mtime":1610098469359,"results":"130","hashOfConfig":"85"},{"size":15401,"mtime":1607917532000,"results":"131","hashOfConfig":"85"},{"size":5623,"mtime":1609992281952,"results":"132","hashOfConfig":"85"},{"size":24665,"mtime":1609992282219,"results":"133","hashOfConfig":"85"},{"size":2722,"mtime":1609992281956,"results":"134","hashOfConfig":"85"},{"size":2975,"mtime":1609992281954,"results":"135","hashOfConfig":"85"},{"size":2915,"mtime":1609992281952,"results":"136","hashOfConfig":"85"},{"size":9430,"mtime":1609992281952,"results":"137","hashOfConfig":"85"},{"size":2171,"mtime":1609992281952,"results":"138","hashOfConfig":"85"},{"size":5779,"mtime":1609992281953,"results":"139","hashOfConfig":"85"},{"size":51533,"mtime":1609992281953,"results":"140","hashOfConfig":"85"},{"size":12867,"mtime":1609992281951,"results":"141","hashOfConfig":"85"},{"size":6881,"mtime":1609992281953,"results":"142","hashOfConfig":"85"},{"size":18188,"mtime":1609992340071,"results":"143","hashOfConfig":"85"},{"size":9266,"mtime":1609992282218,"results":"144","hashOfConfig":"85"},{"size":1732,"mtime":1609992240739,"results":"145","hashOfConfig":"85"},{"size":2085,"mtime":1609992281953,"results":"146","hashOfConfig":"85"},{"size":5053,"mtime":1609992281952,"results":"147","hashOfConfig":"85"},{"size":497,"mtime":1610344717186,"results":"148","hashOfConfig":"85"},{"size":4031,"mtime":1607917532000,"results":"149","hashOfConfig":"85"},{"size":4776,"mtime":1607917532000,"results":"150","hashOfConfig":"85"},{"size":2442,"mtime":1607917532000,"results":"151","hashOfConfig":"85"},{"size":3294,"mtime":1607917532000,"results":"152","hashOfConfig":"85"},{"size":1545,"mtime":1607917532000,"results":"153","hashOfConfig":"85"},{"size":4630,"mtime":1610176496457,"results":"154","hashOfConfig":"85"},{"size":7167,"mtime":1610180871821,"results":"155","hashOfConfig":"85"},{"size":2253,"mtime":1607917532000,"results":"156","hashOfConfig":"85"},{"size":4600,"mtime":1610170236916,"results":"157","hashOfConfig":"85"},{"size":10804,"mtime":1610165926141,"results":"158","hashOfConfig":"85"},{"size":1283,"mtime":1610098673756,"results":"159","hashOfConfig":"85"},{"size":3536,"mtime":1610116661160,"results":"160","hashOfConfig":"85"},{"size":56,"mtime":1607917532000,"results":"161","hashOfConfig":"85"},{"size":2259,"mtime":1610349502730,"results":"162","hashOfConfig":"85"},{"size":2486,"mtime":1607917532000,"results":"163","hashOfConfig":"85"},{"size":2543,"mtime":1607917532000,"results":"164","hashOfConfig":"85"},{"size":4788,"mtime":1607917532000,"results":"165","hashOfConfig":"85"},{"size":3003,"mtime":1610181287537,"results":"166","hashOfConfig":"85"},{"size":581,"mtime":1607917532000,"results":"167","hashOfConfig":"85"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"mv8w9c",{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"170"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"170"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"170"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"170"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"170"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"170"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"170"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"170"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"170"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"170"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"170"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\index.js",[],["346","347"],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\redux\\store\\index.js",["348"],"import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\assets\\icons\\index.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\redux\\reducers\\index.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\redux\\reducers\\manageUsersReducer.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\redux\\reducers\\manageRestaurantReducer.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\redux\\reducers\\generalReducer.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\assets\\icons\\sygnet.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\assets\\icons\\logo-negative.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\assets\\icons\\logo.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\App.js",["349","350","351","352"],"import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './scss/style.scss';\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\nimport TheContent from './containers/TheContent';\n\nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\n  </div>\n)\n\n\n\n// Pages\nconst Login = React.lazy(() => import('./views/pages/login/Login'));\nconst Register = React.lazy(() => import('./views/pages/register/Register'));\nconst Page404 = React.lazy(() => import('./views/pages/page404/Page404'));\nconst Page500 = React.lazy(() => import('./views/pages/page500/Page500'));\nconst ResetPasswordPage = React.lazy(() => import('./views/pages/ResetPasswordPage/ResetPasswordPage'));\n\nfunction App() {\n\n    return (\n          <React.Suspense fallback={loading}>\n            <Switch>\n              <Route exact path=\"/login\" name=\"Login Page\" render={props => <Login {...props}/>} />\n              <Route exact path=\"/reset_password/:token\" render={(props) => <ResetPasswordPage {...props} />} />\n              {/* <Route exact path=\"/register\" name=\"Register Page\" render={props => <Register {...props}/>} /> */}\n              <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props}/>} />\n              <Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props}/>} />\n              <PrivateRoute>\n                <TheContent/>\n              </PrivateRoute>\n            </Switch>\n          </React.Suspense>\n    );\n}\n\nexport default App;\n","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\polyfill.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\serviceWorker.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\PrivateRoute.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\PublicRoute.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\containers\\TheContent.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\pages\\login\\Login.js",["353","354","355","356"],"import React, { useState } from \"react\";\nimport {useHistory} from 'react-router-dom'\nimport {CButton, CCard, CCardBody, CCardGroup, CCol, CContainer, CForm, CInput, CInputGroup, CInputGroupPrepend, CInputGroupText, CRow } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { Field, Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch,useSelector} from \"react-redux\";\nimport { forgotPassword, getLogin } from \"../../../redux/actions/generalActions\";\n\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [type, setType] = useState(\"password\")\n  const [isLoginPage, setLoginPage] = useState(true)\n\n  const validationSchemaForLogin = Yup.object().shape({\n    email: Yup.string().email().required('Required'),\n    password: Yup\n        .string()\n        .label('Password')\n        .required('Required')\n        .min(4, 'Seems a bit short...')\n        .max(15, 'We prefer insecure system, try a shorter password.')\n  }); \n\n  const validationSchemaForForgotPassword = Yup.object().shape({\n    email: Yup.string().email().required('Required'),        \n  });\n\n  const handleLoginForm = (input) => {\n    let obj = {\n        email: input.email,\n        password: input.password\n    }\n    dispatch(getLogin(obj, history))\n  }\n\n  const handlelForgotPassword=(input)=>{\n    let obj = {\n        email: input.email,\n    }\n    dispatch(forgotPassword(obj))\n  } \n\n  const handlePassword = () => {\n    if (type === \"password\") {\n        setType(\"text\")\n    } else {\n        setType(\"password\")\n    }\n  }\n  let forgotPasswordData = useSelector((state)=>{\n    return state.general.forgot_Password\n  });\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"8\">\n            <CCardGroup>\n            \n              <CCard className=\"p-4\">\n                <CCardBody>\n                  {isLoginPage\n                  ?\n                  <Formik\n                      initialValues={{ email: '', password: '' }} validationSchema={validationSchemaForLogin}\n                      onSubmit={(values) => { console.log('values => ', values);  handleLoginForm(values) }}\n                    >\n                    {({\n                      values, errors, touched, handleChange, handleBlur, isSubmitting,\n                      /* and other goodies */\n                    }) => (\n                      <Form>\n\n                        <h1>Login</h1>\n                        <p className=\"text-muted\">Sign In to your account</p>\n                        <CInputGroup className=\"mb-1\">\n                          <CInputGroupPrepend>\n                            <CInputGroupText>\n                              <CIcon name=\"cil-user\" />\n                            </CInputGroupText>\n                          </CInputGroupPrepend>\n                          <Field name=\"email\" placeholder=\"Email\" className=\"form-control\" />\n                        </CInputGroup>\n                        {touched.email && errors.email && <span className=\"error pink-txt f-11 \">{errors.email}</span>}       \n\n                        <CInputGroup className=\"mt-4 mb-1\">\n                          <CInputGroupPrepend>\n                            <CInputGroupText>\n                              <CIcon onClick={() => handlePassword()} name=\"cil-lock-locked\" />\n                            </CInputGroupText>\n                          </CInputGroupPrepend>\n                          <Field type={type} name=\"password\" placeholder=\"Password\" className=\"form-control signup-input\"/>\n                        </CInputGroup>\n                        <div className=\"error pink-txt f-11\">{(touched.password && errors.password && errors.password)}</div>\n                        <CRow className=\"mt-4\">\n                          <CCol xs=\"6\">\n                            <CButton color=\"primary\" type=\"submit\" className=\"px-4\">Login</CButton>\n                          </CCol>\n                          <CCol xs=\"6\" className=\"text-right\">\n                            <CButton onClick={() =>{setLoginPage(false)}} color=\"link\" className=\"px-0\">Forgot password?</CButton>\n                          </CCol>\n                        </CRow>\n\n                      </Form>\n                    )}\n                  </Formik>\n                  :\n                  <React.Fragment>\n                  <Formik\n                      initialValues={{ email: '' }} validationSchema={validationSchemaForForgotPassword}\n                      onSubmit={(values) => { console.log('values => ', values);  handlelForgotPassword(values) }}\n                    >\n                    {({\n                      values, errors, touched, handleChange, handleBlur, isSubmitting,\n                      /* and other goodies */\n                    }) => (\n                      <Form>\n\n                        <h1>Forgot Password</h1>\n                        <p className=\"text-muted\">Enter Your Email Address</p>\n                        <CInputGroup className=\"mb-1\">\n                          <CInputGroupPrepend>\n                            <CInputGroupText>\n                              <CIcon name=\"cil-user\" />\n                            </CInputGroupText>\n                          </CInputGroupPrepend>\n                          <Field name=\"email\" placeholder=\"Email\" className=\"form-control\" />\n                        </CInputGroup>\n                        <div className=\"error pink-txt f-11\">{(touched.email && errors.email && errors.email) || forgotPasswordData&& forgotPasswordData.message}</div>\n                        <CRow className=\"mt-4\">\n                          <CCol xs=\"6\">\n                            <CButton color=\"primary\" type=\"submit\" className=\"px-4\">RESET PASSWORD</CButton>\n                          </CCol>\n                          <CCol xs=\"6\" className=\"text-right\">\n                            <CButton onClick={() =>{setLoginPage(true)}} color=\"link\" className=\"px-0\">Sign In ?</CButton>\n                          </CCol>\n                        </CRow>\n\n                      </Form>\n                    )}\n                  </Formik>\n                  </React.Fragment>\n                  }\n                </CCardBody>\n\n              </CCard>\n\n              \n              <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\n                <CCardBody className=\"text-center d-flex align-items-center\">\n                  <div >\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut\n                      labore et dolore magna aliqua.</p>\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\pages\\ResetPasswordPage\\ResetPasswordPage.js",["357"],"import React, { useState } from \"react\";\r\nimport {useHistory,useParams} from 'react-router-dom'\r\nimport {CButton, CCard, CCardBody, CCardGroup, CCol, CContainer, CLabel, CFormGroup,CInvalidFeedback, CInputGroup, CInputGroupPrepend, CInputGroupText, CRow } from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useDispatch,useSelector} from \"react-redux\";\r\nimport {resetPassword } from \"../../../redux/actions/generalActions\";\r\n\r\n\r\nconst ResetPasswordPage = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const params=useParams();\r\n    const [type, setType] = useState(\"password\")\r\n    const [confirmType, setConfirmType] = useState(\"password\")\r\n    let  mytoken  = params.token;\r\n\r\n\r\n    const phoneRegExp = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\r\n    const validationSchemaFormat = Yup.object().shape({\r\n    newPassword: Yup\r\n        .string()\r\n        .label('Password')\r\n        .required('Required')\r\n        .min(8, 'Seems a bit short(atleast 8 characters)...')\r\n        .max(16, 'We prefer insecure system, try a shorter password.')\r\n        .matches(phoneRegExp, 'Password should Have 1 Uppercase,1 Lowercase,1 digit,1 special characte'),\r\n    \r\n    confirmPassword: Yup\r\n        .string()\r\n        .required()\r\n        .label('Confirm password')\r\n        .test('passwords-match', 'Passwords must match ya fool', function(value) {\r\n        return this.parent.newPassword === value;\r\n        }),\r\n         \r\n    });\r\n\r\n  \r\n    const handleSavePassword = (input) => {\r\n        let obj = {\r\n            token:mytoken,\r\n            newPassword: input.newPassword,\r\n            confirmPassword: input.confirmPassword\r\n        }\r\n        dispatch(resetPassword(obj, history))\r\n    }\r\n\r\n  \r\n\r\n    const handleShowPassword = () => {\r\n            if (type === \"password\") {\r\n                setType(\"text\")\r\n            } else {\r\n                setType(\"password\")\r\n            }\r\n        }\r\n    const handleShowConfirmPassword=()=>{\r\n            if (confirmType === \"password\") {\r\n                setConfirmType(\"text\")\r\n            } else {\r\n                setConfirmType(\"password\")\r\n            }\r\n        }\r\n \r\n  return (\r\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n      <CContainer>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol md=\"8\">\r\n            <CCardGroup>\r\n            \r\n              <CCard className=\"p-4\">\r\n                <CCardBody>\r\n                  \r\n                  <Formik\r\n                      initialValues={{ newPassword: '',confirmPassword:'' }} validationSchema={validationSchemaFormat}\r\n                      onSubmit={(values) => { console.log('values => ', values);  handleSavePassword(values) }}\r\n                    >\r\n                    {({\r\n                      values, errors, touched, handleChange, handleBlur, isSubmitting,\r\n                      /* and other goodies */\r\n                    }) => (\r\n                      <Form>\r\n\r\n                        <h1>RESET PASSWORD</h1>\r\n                        <p className=\"text-muted\">Enter New Password</p>\r\n                        <CFormGroup className=\"mt-4 mb-1\">\r\n                          <CLabel >New Password</CLabel>\r\n                          <CInputGroup >\r\n                            <CInputGroupPrepend>\r\n                              <CInputGroupText>\r\n                                <CIcon onClick={() => handleShowPassword()} name=\"cil-lock-locked\" />\r\n                              </CInputGroupText>\r\n                            </CInputGroupPrepend>\r\n                            <Field type={type} name=\"newPassword\" placeholder=\"New Password\" className={`form-control ${touched.newPassword && errors.newPassword?\"is-invalid\": touched.newPassword && !errors.newPassword?\"is-valid\":null}`}/>\r\n                            <CInvalidFeedback className=\"help-block\">{errors.newPassword}</CInvalidFeedback>\r\n                          </CInputGroup>\r\n                        {/* <div className=\"error pink-txt f-11\">{(touched.newPassword && errors.newPassword && errors.newPassword)}</div> */}\r\n                        </CFormGroup>\r\n\r\n                        <CFormGroup className=\"mt-3 mb-1\">\r\n                          <CLabel >Confirm Password</CLabel>\r\n                          <CInputGroup >\r\n                            <CInputGroupPrepend>\r\n                              <CInputGroupText>\r\n                                <CIcon onClick={() => handleShowConfirmPassword()} name=\"cil-lock-locked\" />\r\n                              </CInputGroupText>\r\n                            </CInputGroupPrepend>\r\n                            <Field type={confirmType} name=\"confirmPassword\" placeholder=\"Confirm Password\" className={`form-control ${touched.confirmPassword && errors.confirmPassword?\"is-invalid\": touched.confirmPassword && !errors.confirmPassword?\"is-valid\":null}`}/>\r\n                            <CInvalidFeedback className=\"help-block\">{errors.confirmPassword}</CInvalidFeedback>\r\n                          </CInputGroup>\r\n                        {/* <div className=\"error pink-txt f-11\">{(touched.confirmPassword && errors.confirmPassword && errors.confirmPassword)}</div> */}\r\n                        </CFormGroup>\r\n\r\n                        <CRow className=\"mt-4\">\r\n                          <CCol xs=\"6\">\r\n                            <CButton color=\"primary\" type=\"submit\" className=\"px-4\">Change Password</CButton>\r\n                          </CCol>\r\n                         \r\n                        </CRow>\r\n\r\n                      </Form>\r\n                    )}\r\n                  </Formik>\r\n                  \r\n                </CCardBody>\r\n\r\n              </CCard>\r\n\r\n              \r\n              <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\r\n                <CCardBody className=\"text-center d-flex align-items-center\">\r\n                  <div >\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut\r\n                      labore et dolore magna aliqua.</p>\r\n                  </div>\r\n                </CCardBody>\r\n              </CCard>\r\n            </CCardGroup>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResetPasswordPage\r\n","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\pages\\register\\Register.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\pages\\page404\\Page404.js",["358","359","360","361","362","363","364"],"import React from 'react'\nimport {\n  CButton,\n  CCol,\n  CContainer,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupAppend,\n  CInputGroupText,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nconst Page404 = () => {\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"6\">\n            <div className=\"clearfix\">\n              <h1 className=\"float-left display-3 mr-4\">404</h1>\n              <h4 className=\"pt-3\">Oops! You{'\\''}re lost.</h4>\n              <p className=\"text-muted float-left\">The page you are looking for was not found.</p>\n            </div>\n            \n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Page404\n","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\pages\\page500\\Page500.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\containers\\TheLayout.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\routes.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\redux\\actions\\generalActions.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\containers\\TheFooter.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\pages\\ManageUsersPage\\ManageUsersPage.js",["365","366","367","368","369","370","371","372","373","374","375"],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\users\\User.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\users\\Users.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\widgets\\Widgets.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\theme\\typography\\Typography.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\containers\\TheSidebar.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\containers\\TheHeader.js",["376","377","378","379","380"],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\theme\\colors\\Colors.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\dashboard\\Dashboard.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\charts\\Charts.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\notifications\\alerts\\Alerts.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\notifications\\modals\\Modals.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\notifications\\badges\\Badges.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\notifications\\toaster\\Toaster.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\icons\\coreui-icons\\CoreUIIcons.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\icons\\flags\\Flags.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\pages\\ManageRestaurantPage\\ManageRestaurantPage.jsx",["381","382","383","384","385"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {CBadge,CCard,CCardBody,CCardHeader,CCol,CDataTable,CButton,CRow,CDropdownMenu,CDropdownItem,CDropdown,CDropdownToggle} from '@coreui/react'\r\nimport { getAllRestaurantData } from '../../../redux/actions/manageRestaurantAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport DataTable, { defaultThemes }from 'react-data-table-component';\r\nimport CIcon from '@coreui/icons-react'\r\nimport moment from \"moment\";\r\nimport DeleteRestaurantModalComp from './DeleteRestaurantModalComp';\r\nimport AddRestaurantModalComp from './AddRestaurantModalComp';\r\nimport UpdatePasswordModalComp from './UpdatePasswordModalComp';\r\nconst ManageRestaurantPage = () => {\r\n    const dispatch=useDispatch();  \r\n    const history = useHistory();\r\n    const [inputValue,setInputValue]=useState(\"\");\r\n    const [deleteModalShow, setDeleteModalShow] = useState(false);\r\n    const [selectedId,setSelectedId]=useState('')\r\n    const [addRestaurantModalShow, setAddRestaurantModalShow] = useState(false);\r\n    const [updateRestaurantModalShow, setUpdateRestaurantModalShow] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        dispatch(getAllRestaurantData({start:0}));\r\n    },[dispatch]);\r\n\r\n    let allRestaurant_data = useSelector((state)=>{\r\n        return state.restaurant\r\n    });\r\n\r\n    let {isLoading,restaurant_Data}=allRestaurant_data;\r\n\r\n    const search=(datas)=>{\r\n        return datas.filter(\r\n            (data)=>data.email.toLowerCase().indexOf(inputValue)>-1\r\n            );\r\n        // const columns=datas[0]&&Object.keys(datas[0]);\r\n        // return datas.filter((data)=>columns.some((column)=>data[column].toString().toLowerCase().indexOf(inputValue.toLowerCase())>-1));\r\n    }\r\n\r\n    const columns = [\r\n  \r\n      { selector: 'restaurants.name',name: 'Name', sortable: true, },\r\n      { selector: 'email', name: 'Email', sortable: true},\r\n      { selector: 'restaurants.company',name: 'Company', sortable: true},\r\n      { selector: 'restaurants.package', name: 'Package', sortable: true },\r\n      { selector: 'restaurants.phoneNumber',name: 'Mobile', sortable: true, cell:(row)=><span>{row.restaurants.phoneNumber}</span> },\r\n      { selector: 'updatedAt', name: 'Updated At', sortable: true,cell:(row)=><span>{moment(row.updatedAt).format(\" Do MMMM, YYYY\")}</span>  },\r\n      { name: 'Action', button: true,\r\n        cell: (row) => \r\n          <CDropdown className=\"btn-group\">\r\n          <CDropdownToggle color=\"primary\"> Action </CDropdownToggle>\r\n          <CDropdownMenu>\r\n            <CDropdownItem onClick={() => {setUpdateRestaurantModalShow(true);setSelectedId(row._id)}}>Update Password</CDropdownItem>\r\n            <CDropdownItem onClick={() => {setDeleteModalShow(true);setSelectedId(row._id)}}>Delete</CDropdownItem>\r\n          </CDropdownMenu>\r\n        </CDropdown>\r\n      },\r\n  \r\n    ];\r\n\r\n\r\n  return (\r\n    <>\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <CCardHeader>\r\n                Manager Restaurant\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CRow className=\"justify-content-between align-items-center \">\r\n              <CCol md=\"4\" className=\"mb-4\">\r\n                <input className=\"form-control\" type=\"text\" onChange={(e)=>{setInputValue(e.target.value)}} placeholder=\"Search\" />\r\n              </CCol>\r\n              <CCol className=\"mb-4 d-flex justify-content-end\" md=\"8\">\r\n                <CButton color=\"primary\" onClick={() => {setAddRestaurantModalShow(true);setSelectedId(null)}}>\r\n                  + Add Restaurant\r\n                </CButton>\r\n              </CCol>\r\n              <div>\r\n                <AddRestaurantModalComp show={addRestaurantModalShow} onClose={() => setAddRestaurantModalShow(false)} />\r\n              </div>\r\n            </CRow>\r\n\r\n              {\r\n                  isLoading\r\n                  ?\r\n                  <div className=\"text-center\">\r\n                      <div className=\"spinner-border m-3\" role=\"status\"></div>\r\n                        <div className=\"visually-hidden\">Please Wait Loading...</div>\r\n                  </div>\r\n                  :\r\n                  <React.Fragment>\r\n                        {\r\n                            restaurant_Data.restaurantList && restaurant_Data.restaurantList.length>0\r\n                            ?\r\n                            <CCard>\r\n                              <DataTable\r\n                                columns={columns}\r\n                                data={search(restaurant_Data.restaurantList)}\r\n                                highlightOnHover\r\n                                pagination\r\n                                noHeader\r\n                                striped\r\n                                sortIcon={<CIcon name={\"cil-arrow-top\"} />}\r\n                              />\r\n                            </CCard>\r\n                            \r\n                            :\r\n                            <div className=\"visually-hidden text-center m-4\">No Data Available</div>\r\n                      }\r\n                  </React.Fragment>\r\n              }\r\n            {/* {JSON.stringify(restaurant_Data.restaurantList)} */}\r\n            \r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n    <React.Fragment>\r\n        <UpdatePasswordModalComp show={updateRestaurantModalShow} onClose={() => setUpdateRestaurantModalShow(false)} selectedid={selectedId}/>\r\n    </React.Fragment>\r\n    <React.Fragment>\r\n      <DeleteRestaurantModalComp show={deleteModalShow} onClose={() => setDeleteModalShow(false)} selectedid={selectedId}/>\r\n    </React.Fragment>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default ManageRestaurantPage\r\n\r\n","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\icons\\brands\\Brands.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\buttons\\button-dropdowns\\ButtonDropdowns.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\buttons\\button-groups\\ButtonGroups.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\buttons\\buttons\\Buttons.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\buttons\\brand-buttons\\BrandButtons.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\tabs\\Tabs.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\switches\\Switches.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\tooltips\\Tooltips.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\progress-bar\\ProgressBar.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\popovers\\Popovers.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\navs\\Navs.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\paginations\\Pagnations.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\navbars\\Navbars.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\forms\\BasicForms.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\list-groups\\ListGroups.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\carousels\\Carousels.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\cards\\Cards.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\collapses\\Collapses.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\breadcrumbs\\Breadcrumbs.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\jumbotrons\\Jumbotrons.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\base\\tables\\Tables.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\redux\\actions\\axios.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\widgets\\WidgetsBrand.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\widgets\\WidgetsDropdown.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\users\\UsersData.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\charts\\ChartLineSimple.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\charts\\ChartBarSimple.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\pages\\ManageUsersPage\\UpdateUserPasswordModalComp.js",["386","387","388","389","390","391"],"import React,{useState,useEffect} from \"react\";\r\nimport {CButton,CModal,CModalFooter,CModalHeader,CModalTitle,CModalBody } from '@coreui/react'// import {deleteSelectedMenuData} from \"../../redux/actions/menuAction\"\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { updateSelectedUserPassword } from \"../../../redux/actions/manageUsersAction\";\r\nimport { CFormGroup,CLabel,CInvalidFeedback,CCardFooter} from '@coreui/react'\r\n\r\n\r\nconst packages = [\"basic\",\"standard\",\"premiun\"];\r\nconst roles=[\"restaurant_admin\"]\r\n\r\nconst UpdateUserPasswordModalComp = (props) => {\r\n    const dispatch=useDispatch();\r\n    const initialValues = {\r\n        password:'',\r\n        confirmpassword:'',\r\n    }\r\n    const validationSchemaForm  = Yup.object().shape({\r\n     \r\n        password:Yup.string()\r\n        .label('Password')\r\n        .required('Required')\r\n        .min(8, 'Seems a bit short(atleast 8 characters)...')\r\n        .max(16, 'We prefer insecure system, try a shorter password.'),\r\n\r\n        confirmpassword:Yup.string()\r\n        .required()\r\n        .label('Confirm password')\r\n        .test('passwords-match','Passwords must match ya fool', function(value) {\r\n        return this.parent.password === value;\r\n        }),\r\n\r\n    });\r\n\r\n\r\n    \r\n    const onSubmit=(input, { setStatus,resetForm})=>{\r\n        setStatus();\r\n        let obj = {\r\n            password: input.password,\r\n        }\r\n        dispatch(updateSelectedUserPassword(props.selectedid,obj));\r\n        props.onClose();\r\n        resetForm();\r\n\r\n    }\r\n   \r\n\r\n    return (\r\n        <>\r\n            <CModal\r\n                {...props}\r\n                size=\"\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                className=\"mainmodal-wrapper\"\r\n            >\r\n                <CModalHeader className=\"align-items-center\">\r\n                    <CModalTitle className=\"brandon-Medium\" id=\"contained-modal-title-vcenter\">\r\n                        Update User Password \r\n                    </CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <Formik \r\n                        enableReinitialize={true} \r\n                        initialValues={initialValues} \r\n                        validationSchema={validationSchemaForm} \r\n                        onSubmit={onSubmit}\r\n                    >\r\n                        {({ errors,touched,values,isSubmitting,setFieldValue,handleChange }) => {\r\n                            return (\r\n                                <Form>\r\n                                    <div >\r\n                                       \r\n                                        <CFormGroup >\r\n                                            <CLabel >Password</CLabel>\r\n                                            <Field type=\"password\" name=\"password\" placeholder=\"Enter here\" className={`form-control ${touched.password && errors.password?\"is-invalid\": touched.password && !errors.password?\"is-valid\":null}`} />\r\n                                            <CInvalidFeedback className=\"help-block\">{errors.password}</CInvalidFeedback>\r\n                                        </CFormGroup>\r\n                                        <CFormGroup >\r\n                                            <CLabel >confirm Password</CLabel>\r\n                                            <Field type=\"password\" name=\"confirmpassword\" placeholder=\"Enter here\" className={`form-control ${touched.confirmpassword && errors.confirmpassword?\"is-invalid\": touched.confirmpassword && !errors.confirmpassword?\"is-valid\":null}`} />\r\n                                            <CInvalidFeedback className=\"help-block\">{errors.confirmpassword}</CInvalidFeedback>\r\n                                        </CFormGroup>\r\n                                    </div>\r\n                                    <CCardFooter className=\"d-flex justify-content-end\">\r\n                                        <CButton color=\"secondary\" className=\"mr-4\" type=\"reset\" onClick={props.onClose}>CANCLE</CButton>\r\n                                        <CButton color=\"success\" type=\"submit\">Update</CButton>\r\n                                    </CCardFooter>\r\n                                </Form>\r\n                            );\r\n                        }}\r\n                    </Formik>\r\n                                    \r\n                     \r\n                    \r\n\r\n                </CModalBody>\r\n              \r\n            </CModal>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateUserPasswordModalComp;","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\containers\\_nav.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\containers\\TheHeaderDropdownTasks.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\pages\\ManageRestaurantPage\\UpdatePasswordModalComp.js",["392","393","394","395","396","397"],"import React,{useState,useEffect} from \"react\";\r\nimport {CButton,CModal,CModalFooter,CModalHeader,CModalTitle,CModalBody } from '@coreui/react'// import {deleteSelectedMenuData} from \"../../redux/actions/menuAction\"\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { updateSelectedRestaurantPassword } from \"../../../redux/actions/manageRestaurantAction\";\r\nimport { CFormGroup,CLabel,CInvalidFeedback,CCardFooter} from '@coreui/react'\r\n\r\n\r\nconst packages = [\"basic\",\"standard\",\"premiun\"];\r\nconst roles=[\"restaurant_admin\"]\r\n\r\nconst UpdatePasswordModalComp = (props) => {\r\n    const dispatch=useDispatch();\r\n    const initialValues = {\r\n        password:'',\r\n        confirmpassword:'',\r\n    }\r\n    const validationSchemaForm  = Yup.object().shape({\r\n        password:Yup.string()\r\n        .label('Password')\r\n        .required('Required')\r\n        .min(8, 'Seems a bit short(atleast 8 characters)...')\r\n        .max(16, 'We prefer insecure system, try a shorter password.'),\r\n\r\n        confirmpassword:Yup.string()\r\n        .required()\r\n        .label('Confirm password')\r\n        .test('passwords-match','Passwords must match ya fool', function(value) {\r\n        return this.parent.password === value;\r\n        }),\r\n\r\n    });\r\n\r\n\r\n    \r\n    const onSubmit=(input, { setStatus,resetForm})=>{\r\n        setStatus();\r\n        let obj = {\r\n            password: input.password,\r\n        }\r\n        dispatch(updateSelectedRestaurantPassword(props.selectedid,obj));\r\n        props.onClose();\r\n        resetForm();\r\n\r\n    }\r\n   \r\n\r\n    return (\r\n        <>\r\n            <CModal\r\n                {...props}\r\n                size=\"\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                className=\"mainmodal-wrapper\"\r\n            >\r\n                <CModalHeader className=\"align-items-center\">\r\n                    <CModalTitle className=\"brandon-Medium\" id=\"contained-modal-title-vcenter\">\r\n                        Update Restaurant Password \r\n                    </CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <Formik \r\n                        enableReinitialize={true} \r\n                        initialValues={initialValues} \r\n                        validationSchema={validationSchemaForm} \r\n                        onSubmit={onSubmit}\r\n                    >\r\n                        {({ errors, touched,values, isSubmitting, setFieldValue,handleChange }) => {\r\n                            return (\r\n                                <Form>\r\n                                    <div >\r\n                                        <CFormGroup >\r\n                                            <CLabel >Password</CLabel>\r\n                                            <Field type=\"password\" name=\"password\" placeholder=\"Enter here\" className={`form-control ${touched.password && errors.password?\"is-invalid\": touched.password && !errors.password?\"is-valid\":null}`} />\r\n                                            <CInvalidFeedback className=\"help-block\">{errors.password}</CInvalidFeedback>\r\n                                        </CFormGroup>\r\n                                        <CFormGroup >\r\n                                            <CLabel >confirm Password</CLabel>\r\n                                            <Field type=\"password\" name=\"confirmpassword\" placeholder=\"Enter here\" className={`form-control ${touched.confirmpassword && errors.confirmpassword?\"is-invalid\": touched.confirmpassword && !errors.confirmpassword?\"is-valid\":null}`} />\r\n                                            <CInvalidFeedback className=\"help-block\">{errors.confirmpassword}</CInvalidFeedback>\r\n                                        </CFormGroup>\r\n                                    </div>\r\n                                    <CCardFooter className=\"d-flex justify-content-end\">\r\n                                        <CButton color=\"secondary\" className=\"mr-4\" type=\"reset\" onClick={props.onClose}>CANCLE</CButton>\r\n                                        <CButton color=\"success\" type=\"submit\">Update</CButton>\r\n                                    </CCardFooter>\r\n                                </Form>\r\n                            );\r\n                        }}\r\n                    </Formik>\r\n                                    \r\n                     \r\n                    \r\n\r\n                </CModalBody>\r\n              \r\n            </CModal>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdatePasswordModalComp;","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\pages\\ManageRestaurantPage\\AddRestaurantModalComp.js",["398","399","400","401","402","403"],"import React,{useState,useEffect} from \"react\";\r\nimport {CButton,CModal,CModalFooter,CModalHeader,CModalTitle,CModalBody } from '@coreui/react'// import {deleteSelectedMenuData} from \"../../redux/actions/menuAction\"\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport moment from 'moment'\r\nimport { addRestaurantData } from \"../../../redux/actions/manageRestaurantAction\";\r\nimport { CFormGroup,CLabel,CRow,CCol,CForm,CInvalidFeedback,CCardFooter} from '@coreui/react'\r\n\r\n\r\nconst packages = [\"basic\",\"standard\",\"premiun\"];\r\nconst roles=[\"restaurant_admin\"]\r\n\r\nconst AddRestaurantModalComp = (props) => {\r\n    const dispatch=useDispatch();\r\n \r\n\r\n    const initialValues = {\r\n        name:'',\r\n        contactName:'',\r\n        company:'',\r\n        phoneNumber:'',\r\n        email:'',\r\n        password:'',\r\n        package:'',\r\n        role:'',\r\n        isAgreeToTerms:false\r\n    }\r\n\r\n    const validationSchema  = Yup.object().shape({\r\n        name:Yup.string().required('Title is required'),\r\n        contactName:Yup.string().required('Title is required'),\r\n        company:Yup.string().required('Title is required'),\r\n        phoneNumber:Yup.number().required().positive().integer(),\r\n        email:Yup.string().email().required('Title is required'),\r\n        password:Yup.string().required('Title is required'),\r\n        package:Yup.string().required('Title is required'),\r\n        role:Yup.string().required('Title is required'),\r\n        isAgreeToTerms:Yup.boolean().oneOf([true], \"You must accept the terms and conditions\").required()\r\n    });\r\n\r\n\r\n   \r\n\r\n   \r\n\r\n    const onSubmit=(fields, { setStatus,resetForm})=>{\r\n        setStatus();\r\n        dispatch(addRestaurantData(fields));\r\n        props.onClose();\r\n        resetForm();\r\n\r\n    }\r\n\r\n   \r\n\r\n    return (\r\n        <>\r\n            <CModal\r\n                {...props}\r\n                size=\"\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                className=\"mainmodal-wrapper\"\r\n            >\r\n                <CModalHeader className=\"align-items-center\">\r\n                    <CModalTitle className=\"brandon-Medium\" id=\"contained-modal-title-vcenter\">\r\n                        Add  Restaurant\r\n                    </CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <Formik enableReinitialize={true} initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit} >\r\n                        {({ errors, touched,values, isSubmitting, setFieldValue,handleChange }) => {\r\n                            return (\r\n                                <Form>\r\n                                    <div >\r\n                                        <CFormGroup >\r\n                                            <CLabel >Restaurant Name</CLabel>\r\n                                            <Field name=\"name\" placeholder=\"Enter here\" className={`form-control ${touched.name && errors.name?\"is-invalid\": touched.name && !errors.name?\"is-valid\":null}`} />\r\n                                            <CInvalidFeedback className=\"help-block\">{errors.name}</CInvalidFeedback>\r\n                                        </CFormGroup> \r\n                                        <CFormGroup >\r\n                                            <CLabel >Contact Name</CLabel>\r\n                                            <Field name=\"contactName\" placeholder=\"Enter here\" className={`form-control ${touched.contactName && errors.contactName?\"is-invalid\": touched.contactName && !errors.contactName?\"is-valid\":null}`} />\r\n                                            <CInvalidFeedback className=\"help-block\">{errors.contactName}</CInvalidFeedback>\r\n                                        </CFormGroup> \r\n                                        <CFormGroup >\r\n                                            <CLabel >Company Name</CLabel>\r\n                                            <Field name=\"company\" placeholder=\"Enter here\" className={`form-control ${touched.company && errors.company?\"is-invalid\": touched.company && !errors.company?\"is-valid\":null}`} />\r\n                                            <CInvalidFeedback className=\"help-block\">{errors.company}</CInvalidFeedback>\r\n                                        </CFormGroup> \r\n                                        \r\n                                        <CRow>\r\n                                            <CCol xs=\"6\">\r\n                                                <CFormGroup >\r\n                                                    <CLabel >Email</CLabel>\r\n                                                    <Field type=\"email\" name=\"email\" placeholder=\"Enter here\" className={`form-control ${touched.email && errors.email?\"is-invalid\": touched.email && !errors.email?\"is-valid\":null}`} />\r\n                                                    <CInvalidFeedback className=\"help-block\">{errors.email}</CInvalidFeedback>\r\n                                                </CFormGroup> \r\n                                            </CCol>\r\n                                            <CCol>\r\n                                                <CFormGroup >\r\n                                                    <CLabel >Password</CLabel>\r\n                                                    <Field type=\"password\" name=\"password\" placeholder=\"Enter here\" className={`form-control ${touched.password && errors.password?\"is-invalid\": touched.password && !errors.password?\"is-valid\":null}`} />\r\n                                                    <CInvalidFeedback className=\"help-block\">{errors.password}</CInvalidFeedback>\r\n                                                </CFormGroup>\r\n                                            </CCol>\r\n                                        </CRow>\r\n                                        <CFormGroup >\r\n                                            <CLabel >Phone Number</CLabel>\r\n                                            <Field name=\"phoneNumber\" placeholder=\"Enter here\" className={`form-control ${touched.phoneNumber && errors.phoneNumber?\"is-invalid\": touched.phoneNumber && !errors.phoneNumber?\"is-valid\":null}`} />\r\n                                            <CInvalidFeedback className=\"help-block\">{errors.phoneNumber}</CInvalidFeedback>\r\n                                        </CFormGroup> \r\n                                    \r\n                                        <CRow>\r\n                                            <CCol xs=\"6\">\r\n                                                <CFormGroup>\r\n                                                    <CLabel>Packages</CLabel>\r\n                                                    <Field as=\"select\" name=\"package\" className={`text-capitalize form-control ${touched.package && errors.package?\"is-invalid\": touched.package && !errors.package?\"is-valid\":null}`}>\r\n                                                        <option value=\"\">Select</option>\r\n                                                        {packages && packages.map((data, index)=>{\r\n                                                            return(\r\n                                                                <React.Fragment key={index}>\r\n                                                                    <option className=\"text-capitalize\" value={data}>{data}</option>\r\n                                                                </React.Fragment>\r\n                                                            )\r\n                                                        })}\r\n                                                    </Field>\r\n                                                    <CInvalidFeedback className=\"help-block\">{errors.package}</CInvalidFeedback>\r\n                                                </CFormGroup>\r\n                                            </CCol>\r\n                                            <CCol xs=\"6\">\r\n                                                <CFormGroup>\r\n                                                    <CLabel>Role</CLabel>\r\n                                                    <Field as=\"select\" name=\"role\" className={`text-capitalize form-control ${touched.role && errors.role?\"is-invalid\": touched.role && !errors.role?\"is-valid\":null}`}>\r\n                                                        <option value=\"\">Select</option>\r\n                                                        {roles && roles.map((data, index)=>{\r\n                                                            return(\r\n                                                                <React.Fragment key={index}>\r\n                                                                    <option className=\"text-capitalize\" value={data}>{data}</option>\r\n                                                                </React.Fragment>\r\n                                                            )\r\n                                                        })}\r\n                                                    </Field>\r\n                                                    <CInvalidFeedback className=\"help-block\">{errors.role}</CInvalidFeedback>\r\n                                                </CFormGroup>\r\n                                            </CCol>   \r\n                                        </CRow>\r\n                                        \r\n                                        <CFormGroup>\r\n                                            <Field type=\"checkbox\" name=\"isAgreeToTerms\"  className={`pb-4 mr-2 ${ errors.isAgreeToTerms?\"is-invalid\": !errors.isAgreeToTerms?\"is-valid\":null}`}/>\r\n                                            <CLabel variant=\"checkbox\" className=\"form-check-label\" >I accept the terms of use</CLabel>\r\n                                            <CInvalidFeedback className=\"help-block\">{errors.isAgreeToTerms}</CInvalidFeedback>\r\n                                        </CFormGroup>\r\n                                    </div>\r\n                                    <CCardFooter className=\"d-flex justify-content-end\">\r\n                                        <CButton color=\"secondary\" className=\"mr-4\" type=\"reset\" onClick={props.onClose}>CANCLE</CButton>\r\n                                        <CButton color=\"success\" type=\"submit\">ADD</CButton>\r\n                                    </CCardFooter>\r\n                                </Form>\r\n                            );\r\n                        }}\r\n                    </Formik>\r\n                                    \r\n                     \r\n                    \r\n\r\n                </CModalBody>\r\n              \r\n            </CModal>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddRestaurantModalComp;","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\pages\\ManageRestaurantPage\\DeleteRestaurantModalComp.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\redux\\actions\\manageRestaurantAction.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\reusable\\index.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\redux\\actions\\manageUsersAction.js",["404"],"import Axios from './axios';\r\nimport FileSaver from 'file-saver';\r\n\r\nexport const getAllUsersData=(data)=>{\r\n    return async(dispatch)=>{\r\n        try{\r\n            dispatch({type:\"GET_ALLUSERS_REQUEST\"});\r\n            let config= {\r\n                headers:{\r\n                 \"Content-Type\":\"application/json\"\r\n                 }\r\n             }\r\n            let dataURL=`/super_admin/manage_user/list`\r\n            let response = await Axios.post(dataURL,JSON.stringify(data),config );\r\n            dispatch({type:\"GET_ALLUSERS_SUCCESS\",payload:response.data});\r\n\r\n        }\r\n        catch(error){\r\n          dispatch({type:\"GET_ALLUSERS_FAILURE\",payload:error});\r\n          // dispatch(setAlert('Unable To Fetch Data', 'error'));\r\n\r\n        }\r\n    }\r\n  };\r\n\r\n\r\n export const updateSelectedUserPassword=(selectedId,data)=>{\r\n    return async(dispatch)=>{\r\n        try{\r\n            dispatch({type:\"UPDATE_USER_REQUEST\"});\r\n            let config= {\r\n                headers:{\r\n                 \"Content-Type\":\"application/json\"\r\n                 }\r\n             }\r\n            let dataURL=`/super_admin/manage_user/update_password/${selectedId}`\r\n            let response = await Axios.put(dataURL,JSON.stringify(data),config );\r\n            dispatch({type:\"UPDATE_USER_SUCCESS\",payload:response.data});\r\n            await dispatch(getAllUsersData());\r\n\r\n        }\r\n        catch(error){\r\n          dispatch({type:\"UPDATE_USER_FAILURE\",payload:error});\r\n        }\r\n    }\r\n  }; \r\n\r\n\r\n\r\n  export function someFunction(values) {\r\n\r\n    return (dispatch) => {\r\n  \r\n  \r\n      const method = 'POST';\r\n  \r\n      const url = '/super_admin/manage_user/export_user';\r\n  \r\n  \r\n      Axios\r\n  \r\n        .request({\r\n  \r\n          url,\r\n  \r\n          method,\r\n  \r\n          responseType: 'blob', //important\r\n  \r\n        })\r\n  \r\n        .then(({ data }) => {\r\n  \r\n          const downloadUrl = window.URL.createObjectURL(new Blob([data]));\r\n  \r\n          const link = document.createElement('a');\r\n  \r\n          link.href = downloadUrl;\r\n  \r\n          link.setAttribute('download', 'file.zip'); //any other extension\r\n  \r\n          document.body.appendChild(link);\r\n  \r\n          link.click();\r\n  \r\n          link.remove();\r\n  \r\n        });\r\n  \r\n    };\r\n  \r\n  }\r\n\r\n\r\n\r\n","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\views\\charts\\MainChartExample.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\containers\\TheHeaderDropdownNotif.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\containers\\TheHeaderDropdownMssg.js",[],"D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\containers\\TheHeaderDropdown.js",["405"],"import React from 'react'\nimport {\n  CBadge,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CImg\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { logoutUser } from '../redux/actions/generalActions'\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from 'react-router-dom';\n\nconst TheHeaderDropdown = () => {\n\n  const dispatch = useDispatch();\n  const history=useHistory();\n  const handleLogout=()=>{\n    dispatch(logoutUser(history))\n  \n  }\n  return (\n    <CDropdown\n      inNav\n      className=\"c-header-nav-items mx-2\"\n      direction=\"down\"\n    >\n      <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\n        <div className=\"c-avatar\">\n          <CImg\n            src={'avatars/6.jpg'}\n            className=\"c-avatar-img\"\n            alt=\"admin@bootstrapmaster.com\"\n          />\n        </div>\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownItem\n          header\n          tag=\"div\"\n          color=\"light\"\n          className=\"text-center\"\n        >\n          <strong>Account</strong>\n        </CDropdownItem>\n        {/* <CDropdownItem>\n          <CIcon name=\"cil-bell\" className=\"mfe-2\" />\n          Updates\n          <CBadge color=\"info\" className=\"mfs-auto\">42</CBadge>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-envelope-open\" className=\"mfe-2\" />\n          Messages\n          <CBadge color=\"success\" className=\"mfs-auto\">42</CBadge>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-task\" className=\"mfe-2\" />\n          Tasks\n          <CBadge color=\"danger\" className=\"mfs-auto\">42</CBadge>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-comment-square\" className=\"mfe-2\" />\n          Comments\n          <CBadge color=\"warning\" className=\"mfs-auto\">42</CBadge>\n        </CDropdownItem>\n        <CDropdownItem\n          header\n          tag=\"div\"\n          color=\"light\"\n          className=\"text-center\"\n        >\n          <strong>Settings</strong>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-user\" className=\"mfe-2\" />Profile\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-settings\" className=\"mfe-2\" />\n          Settings\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-credit-card\" className=\"mfe-2\" />\n          Payments\n          <CBadge color=\"secondary\" className=\"mfs-auto\">42</CBadge>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-file\" className=\"mfe-2\" />\n          Projects\n          <CBadge color=\"primary\" className=\"mfs-auto\">42</CBadge>\n        </CDropdownItem> */}\n        <CDropdownItem divider />\n        <CDropdownItem onClick={handleLogout}>\n          <CIcon name=\"cil-lock-locked\" className=\"mfe-2\" />\n          Lock Account\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default TheHeaderDropdown\n","D:\\PickyPigs-SuperAdmin\\pickypigs-super-admin\\src\\reusable\\DocsLink.js",[],{"ruleId":"406","replacedBy":"407"},{"ruleId":"408","replacedBy":"409"},{"ruleId":"410","severity":1,"message":"411","line":1,"column":40,"nodeType":"412","messageId":"413","endLine":1,"endColumn":47},{"ruleId":"410","severity":1,"message":"414","line":1,"column":17,"nodeType":"412","messageId":"413","endLine":1,"endColumn":26},{"ruleId":"410","severity":1,"message":"415","line":2,"column":10,"nodeType":"412","messageId":"413","endLine":2,"endColumn":20},{"ruleId":"410","severity":1,"message":"416","line":5,"column":8,"nodeType":"412","messageId":"413","endLine":5,"endColumn":19},{"ruleId":"410","severity":1,"message":"417","line":18,"column":7,"nodeType":"412","messageId":"413","endLine":18,"endColumn":15},{"ruleId":"410","severity":1,"message":"418","line":3,"column":66,"nodeType":"412","messageId":"413","endLine":3,"endColumn":71},{"ruleId":"410","severity":1,"message":"419","line":3,"column":73,"nodeType":"412","messageId":"413","endLine":3,"endColumn":79},{"ruleId":"420","severity":1,"message":"421","line":132,"column":111,"nodeType":"422","messageId":"423","endLine":132,"endColumn":113},{"ruleId":"420","severity":1,"message":"421","line":132,"column":132,"nodeType":"422","messageId":"423","endLine":132,"endColumn":134},{"ruleId":"410","severity":1,"message":"424","line":7,"column":22,"nodeType":"412","messageId":"413","endLine":7,"endColumn":33},{"ruleId":"410","severity":1,"message":"425","line":3,"column":3,"nodeType":"412","messageId":"413","endLine":3,"endColumn":10},{"ruleId":"410","severity":1,"message":"419","line":6,"column":3,"nodeType":"412","messageId":"413","endLine":6,"endColumn":9},{"ruleId":"410","severity":1,"message":"426","line":7,"column":3,"nodeType":"412","messageId":"413","endLine":7,"endColumn":14},{"ruleId":"410","severity":1,"message":"427","line":8,"column":3,"nodeType":"412","messageId":"413","endLine":8,"endColumn":21},{"ruleId":"410","severity":1,"message":"428","line":9,"column":3,"nodeType":"412","messageId":"413","endLine":9,"endColumn":20},{"ruleId":"410","severity":1,"message":"429","line":10,"column":3,"nodeType":"412","messageId":"413","endLine":10,"endColumn":18},{"ruleId":"410","severity":1,"message":"430","line":13,"column":8,"nodeType":"412","messageId":"413","endLine":13,"endColumn":13},{"ruleId":"410","severity":1,"message":"431","line":2,"column":22,"nodeType":"412","messageId":"413","endLine":2,"endColumn":33},{"ruleId":"410","severity":1,"message":"432","line":3,"column":9,"nodeType":"412","messageId":"413","endLine":3,"endColumn":15},{"ruleId":"410","severity":1,"message":"433","line":3,"column":49,"nodeType":"412","messageId":"413","endLine":3,"endColumn":59},{"ruleId":"410","severity":1,"message":"434","line":4,"column":10,"nodeType":"412","messageId":"413","endLine":4,"endColumn":26},{"ruleId":"410","severity":1,"message":"435","line":6,"column":21,"nodeType":"412","messageId":"413","endLine":6,"endColumn":34},{"ruleId":"410","severity":1,"message":"436","line":12,"column":8,"nodeType":"412","messageId":"413","endLine":12,"endColumn":19},{"ruleId":"410","severity":1,"message":"437","line":13,"column":8,"nodeType":"412","messageId":"413","endLine":13,"endColumn":13},{"ruleId":"410","severity":1,"message":"438","line":14,"column":8,"nodeType":"412","messageId":"413","endLine":14,"endColumn":16},{"ruleId":"410","severity":1,"message":"439","line":24,"column":11,"nodeType":"412","messageId":"413","endLine":24,"endColumn":18},{"ruleId":"410","severity":1,"message":"440","line":26,"column":12,"nodeType":"412","messageId":"413","endLine":26,"endColumn":27},{"ruleId":"410","severity":1,"message":"441","line":29,"column":12,"nodeType":"412","messageId":"413","endLine":29,"endColumn":34},{"ruleId":"410","severity":1,"message":"442","line":9,"column":3,"nodeType":"412","messageId":"413","endLine":9,"endColumn":17},{"ruleId":"410","severity":1,"message":"443","line":12,"column":3,"nodeType":"412","messageId":"413","endLine":12,"endColumn":8},{"ruleId":"410","severity":1,"message":"444","line":19,"column":8,"nodeType":"412","messageId":"413","endLine":19,"endColumn":29},{"ruleId":"410","severity":1,"message":"445","line":20,"column":8,"nodeType":"412","messageId":"413","endLine":20,"endColumn":30},{"ruleId":"410","severity":1,"message":"446","line":21,"column":8,"nodeType":"412","messageId":"413","endLine":21,"endColumn":30},{"ruleId":"410","severity":1,"message":"431","line":2,"column":22,"nodeType":"412","messageId":"413","endLine":2,"endColumn":33},{"ruleId":"410","severity":1,"message":"432","line":3,"column":9,"nodeType":"412","messageId":"413","endLine":3,"endColumn":15},{"ruleId":"410","severity":1,"message":"433","line":3,"column":49,"nodeType":"412","messageId":"413","endLine":3,"endColumn":59},{"ruleId":"410","severity":1,"message":"435","line":6,"column":21,"nodeType":"412","messageId":"413","endLine":6,"endColumn":34},{"ruleId":"410","severity":1,"message":"439","line":14,"column":11,"nodeType":"412","messageId":"413","endLine":14,"endColumn":18},{"ruleId":"410","severity":1,"message":"447","line":1,"column":15,"nodeType":"412","messageId":"413","endLine":1,"endColumn":23},{"ruleId":"410","severity":1,"message":"448","line":1,"column":24,"nodeType":"412","messageId":"413","endLine":1,"endColumn":33},{"ruleId":"410","severity":1,"message":"449","line":2,"column":24,"nodeType":"412","messageId":"413","endLine":2,"endColumn":36},{"ruleId":"410","severity":1,"message":"424","line":3,"column":21,"nodeType":"412","messageId":"413","endLine":3,"endColumn":32},{"ruleId":"410","severity":1,"message":"450","line":10,"column":7,"nodeType":"412","messageId":"413","endLine":10,"endColumn":15},{"ruleId":"410","severity":1,"message":"451","line":11,"column":7,"nodeType":"412","messageId":"413","endLine":11,"endColumn":12},{"ruleId":"410","severity":1,"message":"447","line":1,"column":15,"nodeType":"412","messageId":"413","endLine":1,"endColumn":23},{"ruleId":"410","severity":1,"message":"448","line":1,"column":24,"nodeType":"412","messageId":"413","endLine":1,"endColumn":33},{"ruleId":"410","severity":1,"message":"449","line":2,"column":24,"nodeType":"412","messageId":"413","endLine":2,"endColumn":36},{"ruleId":"410","severity":1,"message":"424","line":3,"column":21,"nodeType":"412","messageId":"413","endLine":3,"endColumn":32},{"ruleId":"410","severity":1,"message":"450","line":10,"column":7,"nodeType":"412","messageId":"413","endLine":10,"endColumn":15},{"ruleId":"410","severity":1,"message":"451","line":11,"column":7,"nodeType":"412","messageId":"413","endLine":11,"endColumn":12},{"ruleId":"410","severity":1,"message":"447","line":1,"column":15,"nodeType":"412","messageId":"413","endLine":1,"endColumn":23},{"ruleId":"410","severity":1,"message":"448","line":1,"column":24,"nodeType":"412","messageId":"413","endLine":1,"endColumn":33},{"ruleId":"410","severity":1,"message":"449","line":2,"column":24,"nodeType":"412","messageId":"413","endLine":2,"endColumn":36},{"ruleId":"410","severity":1,"message":"424","line":3,"column":21,"nodeType":"412","messageId":"413","endLine":3,"endColumn":32},{"ruleId":"410","severity":1,"message":"452","line":6,"column":8,"nodeType":"412","messageId":"413","endLine":6,"endColumn":14},{"ruleId":"410","severity":1,"message":"418","line":8,"column":38,"nodeType":"412","messageId":"413","endLine":8,"endColumn":43},{"ruleId":"410","severity":1,"message":"453","line":2,"column":8,"nodeType":"412","messageId":"413","endLine":2,"endColumn":17},{"ruleId":"410","severity":1,"message":"432","line":3,"column":3,"nodeType":"412","messageId":"413","endLine":3,"endColumn":9},"no-native-reassign",["454"],"no-negated-in-lhs",["455"],"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'HashRouter' is defined but never used.","'PublicRoute' is defined but never used.","'Register' is assigned a value but never used.","'CForm' is defined but never used.","'CInput' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'useSelector' is defined but never used.","'CButton' is defined but never used.","'CInputGroup' is defined but never used.","'CInputGroupPrepend' is defined but never used.","'CInputGroupAppend' is defined but never used.","'CInputGroupText' is defined but never used.","'CIcon' is defined but never used.","'useLocation' is defined but never used.","'CBadge' is defined but never used.","'CDataTable' is defined but never used.","'downloadUserData' is defined but never used.","'defaultThemes' is defined but never used.","'export_data' is defined but never used.","'Axios' is defined but never used.","'download' is defined but never used.","'history' is assigned a value but never used.","'deleteModalShow' is assigned a value but never used.","'addRestaurantModalShow' is assigned a value but never used.","'CHeaderNavLink' is defined but never used.","'CLink' is defined but never used.","'TheHeaderDropdownMssg' is defined but never used.","'TheHeaderDropdownNotif' is defined but never used.","'TheHeaderDropdownTasks' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'CModalFooter' is defined but never used.","'packages' is assigned a value but never used.","'roles' is assigned a value but never used.","'moment' is defined but never used.","'FileSaver' is defined but never used.","no-global-assign","no-unsafe-negation"]